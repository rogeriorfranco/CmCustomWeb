using DDesign.API;
using DDesign.API.Components;
using Attribute = DDesign.API.Attributes.Attribute;
using System.Collections.Generic;
using CmCustomDto;
using System.Linq;

namespace CmCustomDal
{
    public class OperationsCmApiDal : IOperationsCmApiDal
    {
        static ConnectMasterAPI cmAPI;
        public string getSession()
        {
            if (cmAPI == null)
                cmAPI = ConnectionCmDal.getConnectionCm();

            return cmAPI.Ticket.Connected.ToString();
        }

        public void atualizaPontoCompoment(int compPointID, string circuito, string status)
        {
            IFacilityDal facilityDal = new FacilityDal();
            ComponentPoint componentPoint = cmAPI.ComponentPoints.ReadElement(compPointID) as ComponentPoint;
            componentPoint.ObjectState.StateTypeId = facilityDal.getIdStatusCompomentPoint(status);
            componentPoint.Description = circuito.TrimStart();
            componentPoint.UpdateDetails();

        }

        public void atualizaAtributosPortaOLT(Olt olt)
        {
            Dictionary<int, IEnumerable<int>> attributosPortid = ReadAttributePortsIds(olt.idSubPorta);

            foreach (int attrId in attributosPortid[olt.idSubPorta])
            {
                Attribute attributPorts = cmAPI.Attributes.ReadElement(attrId) as Attribute;

                if (attributPorts.Name.Equals("STATUS"))
                {
                    attributPorts.Value = olt.status;
                    attributPorts.UpdateDetails();
                }
                if (attributPorts.Name.Equals("CIRCUITO"))
                {
                    attributPorts.Value = olt.circuito.TrimStart();
                    attributPorts.UpdateDetails();
                }
                if (attributPorts.Name.Equals("CLIENTE"))
                {
                    attributPorts.Value = olt.cliente.TrimStart();
                    attributPorts.UpdateDetails();
                }
                if (attributPorts.Name.Equals("BANDA_MB"))
                {
                    attributPorts.Value = (olt.banda_mb.Trim().Equals("") ? "0" : olt.banda_mb.Trim());
                    attributPorts.UpdateDetails();
                }
                if (attributPorts.Name.Equals("BANDA_UPLINK"))
                {
                    attributPorts.Value = (olt.banda_uplink.Trim().Equals("") ? "0" : olt.banda_uplink.Trim());
                    attributPorts.UpdateDetails();
                }
                if (attributPorts.Name.Equals("SERIAL_ONT"))
                {
                    attributPorts.Value = olt.serial.Trim();
                    attributPorts.UpdateDetails();
                }
                if (attributPorts.Name.Equals("PRODUTO"))
                {
                    attributPorts.Value = olt.produto.Trim();
                    attributPorts.UpdateDetails();
                }
                if (attributPorts.Name.Equals("BAIRRO"))
                {
                    attributPorts.Value = olt.bairro.Trim();
                    attributPorts.UpdateDetails();
                }
                if (olt.acao.Equals("SALVAR"))
                {
                    if (attributPorts.Name.Equals("VLAN_OUTER:INNER") && olt.vlan_outer.Trim() != "" && olt.vlan_inner.Trim() != "")
                    {
                        attributPorts.Value = string.Concat(olt.vlan_outer.TrimStart(), ":", olt.vlan_inner.TrimStart());
                        attributPorts.UpdateDetails();
                    }
                    if (attributPorts.Name.Equals("ONT_ID"))
                    {
                        attributPorts.Value = olt.ont_id.TrimStart();
                        attributPorts.UpdateDetails();
                    }
                }

                if (attributPorts.Name.Equals("OBSERVACAO"))
                {
                    attributPorts.Value = olt.observacao.TrimStart();                    
                    attributPorts.UpdateDetails();
                }

                if (attributPorts.Name.Equals("MODELO_ONT"))
                {
                    attributPorts.Value = olt.modelo_ont;
                    attributPorts.UpdateDetails();
                }

                if (attributPorts.Name.Equals("LOGRADOURO"))
                {
                    attributPorts.Value = olt.idlogradouro;
                    attributPorts.UpdateDetails();
                }
                if (attributPorts.Name.Equals("NUMERO_LOTE"))
                {
                    attributPorts.Value = olt.nro_lote.Trim();
                    attributPorts.UpdateDetails();
                }
                if (attributPorts.Name.Equals("VALIDADE_RESERVA"))
                {
                    attributPorts.Value = olt.validade_reserva;
                    attributPorts.UpdateDetails();
                }

                if (olt.acao.Equals("REDESIGNAR"))
                {
                    if (attributPorts.Name.Equals("COMPLEMENTO_NIVEL_1"))
                    {
                        attributPorts.Value = olt.compl_nivel_1;
                        attributPorts.UpdateDetails();
                    }
                    if (attributPorts.Name.Equals("COMPLEMENTO_NIVEL_1_DESCRICAO"))
                    {
                        attributPorts.Value = olt.compl_nivel_1_descricao;
                        attributPorts.UpdateDetails();
                    }
                    if (attributPorts.Name.Equals("COMPLEMENTO_NIVEL_2"))
                    {
                        attributPorts.Value = olt.compl_nivel_2;
                        attributPorts.UpdateDetails();
                    }
                    if (attributPorts.Name.Equals("COMPLEMENTO_NIVEL_2_DESCRICAO"))
                    {
                        attributPorts.Value = olt.compl_nivel_2_descricao;
                        attributPorts.UpdateDetails();
                    }
                    if (attributPorts.Name.Equals("COMPLEMENTO_NIVEL_3"))
                    {
                        attributPorts.Value = olt.compl_nivel_3;
                        attributPorts.UpdateDetails();
                    }
                    if (attributPorts.Name.Equals("COMPLEMENTO_NIVEL_3_DESCRICAO"))
                    {
                        attributPorts.Value = olt.compl_nivel_3_descricao;
                        attributPorts.UpdateDetails();
                    }
                }
            }

        }

        public Dictionary<int, IEnumerable<int>> ReadAttributePortsIds(int id)
        {
            return cmAPI.Ports.ReadAttributeIds(new List<int> { id });
        }

        public Dictionary<int, List<int>> ReadPortIdsFromCards(int id)
        {
            return cmAPI.Ports.ReadPortIdsFromCards(new List<int> { id });
        }

        public int AddAttributePort(int idPorta, int idAtributo, string valor)
        {
            return cmAPI.Ports.AddAttribute(idPorta, idAtributo, valor);
        }

        public int CreateAttributSubPorts(int idComponent)
        {
            Dictionary<int, List<int>> attributosPortid = ReadPortIdsFromCards(idComponent);
            attributosPortid[idComponent].Sort();

            foreach (int attrId in attributosPortid[idComponent])
            {
                if (cmAPI.Ports.ReadAttributeIds(new List<int> { attrId })[attrId].Count() < 19)
                    if (AddAttributePort(attrId, 209, string.Empty) != 0)
                        return attrId;
            }
            return 0;
        }

    }
}
