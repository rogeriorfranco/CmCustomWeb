using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using CmCustomDal;
using System.Data;
using CmCustomDto;

namespace CmCustomBll
{
    public class FacilityBll
    {
        IFacilityDal facilityDal = new FacilityDal();

        public DataTable consultaFacilidades(string circuito, string produto, string status, string cnl, string serial, string cto,
            string olt, string ipOlt, string vlanCompartilhada, string outerVlan, string innerVlan)
        {
            try
            {
                if (circuito.Equals("") && produto.Equals("") && status.Equals("0") && cnl.Equals("") && serial.Equals("") && cto.Equals("") &&
                    olt.Equals("") && ipOlt.Equals("") && vlanCompartilhada.Equals("") && outerVlan.Equals("") && innerVlan.Equals(""))
                    throw new Exception("Favor informar pelo menos 1 parâmetro para consultar");

                return facilityDal.consultaFacilidades(circuito, produto, status, cnl, serial, cto, olt, ipOlt, vlanCompartilhada, outerVlan, innerVlan);
            }
            catch (Exception ex)
            {
                throw new Exception(ex.Message);
            }

        }

        public int getIdSubPortaVagoByPorta(int idporta)
        {
            return facilityDal.getIdSubPortaVagoByPorta(idporta);
        }

        //public DataRow getFacilityCTOByIdPonto(int idPonto)
        //{
        //    return facilityDal.getFacilityCTOByIdPonto(idPonto);
        //}

        public DataRow getFacilityOLTByIdSubPorta(int idSubporta, int idCartao)
        {
            return facilityDal.getFacilityOLTByIdSubPorta(idSubporta, idCartao);
        }

        public DataTable getFacilitysRedesignate(string cto, string ip, int pointId)
        {
            return facilityDal.getFacilitysRedesignate(cto, ip, pointId);
        }

        public Olt getOLTAttributsByIdSubPorta(int idSubporta)
        {
            return facilityDal.getOLTAttributsByIdSubPorta(idSubporta);
        }
    }
}
